//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ADEntities.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class admDB_SAADDBEntities : DbContext
    {
        public admDB_SAADDBEntities()
            : base("name=admDB_SAADDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tAccione> tAcciones { get; set; }
        public virtual DbSet<tActividadVendedore> tActividadVendedores { get; set; }
        public virtual DbSet<tAreaMetropolitana> tAreaMetropolitanas { get; set; }
        public virtual DbSet<tAtencionCliente> tAtencionClientes { get; set; }
        public virtual DbSet<tBanner> tBanners { get; set; }
        public virtual DbSet<tBitacoraProducto> tBitacoraProductos { get; set; }
        public virtual DbSet<tBitacoraProductosInventario> tBitacoraProductosInventarios { get; set; }
        public virtual DbSet<tBorradorDetalleVenta> tBorradorDetalleVentas { get; set; }
        public virtual DbSet<tBorradorDetalleVista> tBorradorDetalleVistas { get; set; }
        public virtual DbSet<tBorradorServicioVista> tBorradorServicioVistas { get; set; }
        public virtual DbSet<tBorradorVenta> tBorradorVentas { get; set; }
        public virtual DbSet<tBorradorVista> tBorradorVistas { get; set; }
        public virtual DbSet<tCantidadProductosOrden> tCantidadProductosOrdens { get; set; }
        public virtual DbSet<tCarrito> tCarritoes { get; set; }
        public virtual DbSet<tCatalogoCategoria> tCatalogoCategorias { get; set; }
        public virtual DbSet<tCatalogoCuentaBanco> tCatalogoCuentaBancos { get; set; }
        public virtual DbSet<tCatalogoDetalleDevolucion> tCatalogoDetalleDevolucions { get; set; }
        public virtual DbSet<tCatalogoDetalleVista> tCatalogoDetalleVistas { get; set; }
        public virtual DbSet<tCatalogoMarca> tCatalogoMarcas { get; set; }
        public virtual DbSet<tCatalogoProveedor> tCatalogoProveedors { get; set; }
        public virtual DbSet<tCatalogo> tCatalogos { get; set; }
        public virtual DbSet<tCatalogoSubcategoria> tCatalogoSubcategorias { get; set; }
        public virtual DbSet<tCatalogoSucursal> tCatalogoSucursals { get; set; }
        public virtual DbSet<tCatalogoTipoTerminale> tCatalogoTipoTerminales { get; set; }
        public virtual DbSet<tCatalogoVista> tCatalogoVistas { get; set; }
        public virtual DbSet<tCategoria> tCategorias { get; set; }
        public virtual DbSet<tClientesFisico> tClientesFisicos { get; set; }
        public virtual DbSet<tClientesMorale> tClientesMorales { get; set; }
        public virtual DbSet<tClientesTiendaVirtual> tClientesTiendaVirtuals { get; set; }
        public virtual DbSet<tComisione> tComisiones { get; set; }
        public virtual DbSet<tControle> tControles { get; set; }
        public virtual DbSet<tCotizacion> tCotizacions { get; set; }
        public virtual DbSet<tCotizacionDetalle> tCotizacionDetalles { get; set; }
        public virtual DbSet<tCuentaBancariaINT> tCuentaBancariaINTs { get; set; }
        public virtual DbSet<tCuentaBancariaMXN> tCuentaBancariaMXNs { get; set; }
        public virtual DbSet<tCuenta> tCuentas { get; set; }
        public virtual DbSet<tDatosFacturacion> tDatosFacturacions { get; set; }
        public virtual DbSet<tDescuento> tDescuentos { get; set; }
        public virtual DbSet<tDespacho> tDespachoes { get; set; }
        public virtual DbSet<tDetalleCarrito> tDetalleCarritoes { get; set; }
        public virtual DbSet<tDetalleCredito> tDetalleCreditoes { get; set; }
        public virtual DbSet<tDetalleDevolucione> tDetalleDevoluciones { get; set; }
        public virtual DbSet<tDetalleHistoricoComisione> tDetalleHistoricoComisiones { get; set; }
        public virtual DbSet<tDetalleMesaRegalo> tDetalleMesaRegalos { get; set; }
        public virtual DbSet<tDetallePedido> tDetallePedidoes { get; set; }
        public virtual DbSet<tDetallePromocion> tDetallePromocions { get; set; }
        public virtual DbSet<tDetalleRecepcion> tDetalleRecepcions { get; set; }
        public virtual DbSet<tDetalleReparacione> tDetalleReparaciones { get; set; }
        public virtual DbSet<tDetalleTransferencia> tDetalleTransferencias { get; set; }
        public virtual DbSet<tDetalleVenta> tDetalleVentas { get; set; }
        public virtual DbSet<tDetalleVentaEnLinea> tDetalleVentaEnLineas { get; set; }
        public virtual DbSet<tDetalleVentaMesaRegalo> tDetalleVentaMesaRegalos { get; set; }
        public virtual DbSet<tDetalleVista> tDetalleVistas { get; set; }
        public virtual DbSet<tDistribucionVentaEnLinea> tDistribucionVentaEnLineas { get; set; }
        public virtual DbSet<tEmpresa> tEmpresas { get; set; }
        public virtual DbSet<tEntrada> tEntradas { get; set; }
        public virtual DbSet<tErrore> tErrores { get; set; }
        public virtual DbSet<tEstado> tEstados { get; set; }
        public virtual DbSet<tEstatusTicket> tEstatusTickets { get; set; }
        public virtual DbSet<tEstatusVentasEnLinea> tEstatusVentasEnLineas { get; set; }
        public virtual DbSet<tEvento> tEventos { get; set; }
        public virtual DbSet<tFacturacionTiendaVirtual> tFacturacionTiendaVirtuals { get; set; }
        public virtual DbSet<tFormaPago> tFormaPagoes { get; set; }
        public virtual DbSet<tFormaPagoCredito> tFormaPagoCreditoes { get; set; }
        public virtual DbSet<tFormaPagoMesaRegalo> tFormaPagoMesaRegalos { get; set; }
        public virtual DbSet<tHistorialCredito> tHistorialCreditoes { get; set; }
        public virtual DbSet<tHistoricoComisione> tHistoricoComisiones { get; set; }
        public virtual DbSet<tHistoricoRecepcion> tHistoricoRecepcions { get; set; }
        public virtual DbSet<tHistoricoReparacione> tHistoricoReparaciones { get; set; }
        public virtual DbSet<tHistoricoTransferencia> tHistoricoTransferencias { get; set; }
        public virtual DbSet<tInventario> tInventarios { get; set; }
        public virtual DbSet<tMarca> tMarcas { get; set; }
        public virtual DbSet<tMateriale> tMateriales { get; set; }
        public virtual DbSet<tMesaRegalo> tMesaRegalos { get; set; }
        public virtual DbSet<tMunicipio> tMunicipios { get; set; }
        public virtual DbSet<tNacionalidad> tNacionalidads { get; set; }
        public virtual DbSet<tNivelAcademico> tNivelAcademicoes { get; set; }
        public virtual DbSet<tNotasCredito> tNotasCreditoes { get; set; }
        public virtual DbSet<tOrden> tOrdens { get; set; }
        public virtual DbSet<tOrdenProducto> tOrdenProductoes { get; set; }
        public virtual DbSet<tOrigenCliente> tOrigenClientes { get; set; }
        public virtual DbSet<tOrigenVenta> tOrigenVentas { get; set; }
        public virtual DbSet<tPagoMes> tPagoMeses { get; set; }
        public virtual DbSet<tPedido> tPedidos { get; set; }
        public virtual DbSet<tPerfilAccione> tPerfilAcciones { get; set; }
        public virtual DbSet<tPerfile> tPerfiles { get; set; }
        public virtual DbSet<tPrioridadTicket> tPrioridadTickets { get; set; }
        public virtual DbSet<tProducto> tProductos { get; set; }
        public virtual DbSet<tProductosInventario> tProductosInventarios { get; set; }
        public virtual DbSet<tProductosSucursal> tProductosSucursals { get; set; }
        public virtual DbSet<tPromocione> tPromociones { get; set; }
        public virtual DbSet<tProveedore> tProveedores { get; set; }
        public virtual DbSet<tRecepcione> tRecepciones { get; set; }
        public virtual DbSet<tReparacione> tReparaciones { get; set; }
        public virtual DbSet<tReporteCaja> tReporteCajas { get; set; }
        public virtual DbSet<tReporteComisionesEspeciale> tReporteComisionesEspeciales { get; set; }
        public virtual DbSet<tReporteVentasComisione> tReporteVentasComisiones { get; set; }
        public virtual DbSet<tReporteVentasComisionesDespacho> tReporteVentasComisionesDespachos { get; set; }
        public virtual DbSet<tRespaldoDetalleVentaEnLinea> tRespaldoDetalleVentaEnLineas { get; set; }
        public virtual DbSet<tRespaldoDiarioInventario> tRespaldoDiarioInventarios { get; set; }
        public virtual DbSet<tRespaldoProductosSucursal> tRespaldoProductosSucursals { get; set; }
        public virtual DbSet<tRespaldoVentasEnLinea> tRespaldoVentasEnLineas { get; set; }
        public virtual DbSet<tSalida> tSalidas { get; set; }
        public virtual DbSet<tServicio> tServicios { get; set; }
        public virtual DbSet<tServicioVista> tServicioVistas { get; set; }
        public virtual DbSet<tSubcategoria> tSubcategorias { get; set; }
        public virtual DbSet<tSucursale> tSucursales { get; set; }
        public virtual DbSet<tTicket> tTickets { get; set; }
        public virtual DbSet<tTipoCotizacion> tTipoCotizacions { get; set; }
        public virtual DbSet<tTipoEntrega> tTipoEntregas { get; set; }
        public virtual DbSet<tTipoMoneda> tTipoMonedas { get; set; }
        public virtual DbSet<tTipoNotaCredito> tTipoNotaCreditoes { get; set; }
        public virtual DbSet<tTipoPromocion> tTipoPromocions { get; set; }
        public virtual DbSet<tTipoTicket> tTipoTickets { get; set; }
        public virtual DbSet<tTransferencia> tTransferencias { get; set; }
        public virtual DbSet<tUsuarioEvento> tUsuarioEventoes { get; set; }
        public virtual DbSet<tUsuario> tUsuarios { get; set; }
        public virtual DbSet<tVentaMesaRegalo> tVentaMesaRegalos { get; set; }
        public virtual DbSet<tVenta> tVentas { get; set; }
        public virtual DbSet<tVentasEnLinea> tVentasEnLineas { get; set; }
        public virtual DbSet<tVista> tVistas { get; set; }
        public virtual DbSet<tReporteDiarioInventario> tReporteDiarioInventarios { get; set; }
    
        public virtual int ActualizarInventario(Nullable<int> idInventario, Nullable<System.DateTime> fecha)
        {
            var idInventarioParameter = idInventario.HasValue ?
                new ObjectParameter("idInventario", idInventario) :
                new ObjectParameter("idInventario", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarInventario", idInventarioParameter, fechaParameter);
        }
    
        public virtual ObjectResult<CotizacionesVentas_Result> CotizacionesVentas(Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin)
        {
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CotizacionesVentas_Result>("CotizacionesVentas", fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<GetEvents_Result> GetEvents(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEvents_Result>("GetEvents", userIDParameter);
        }
    
        public virtual ObjectResult<GetPendingsTransfers_Result> GetPendingsTransfers(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPendingsTransfers_Result>("GetPendingsTransfers", userIDParameter);
        }
    
        public virtual ObjectResult<GetPendingsViews_Result> GetPendingsViews(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPendingsViews_Result>("GetPendingsViews", userIDParameter);
        }
    
        public virtual ObjectResult<GetUsers_Result> GetUsers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUsers_Result>("GetUsers");
        }
    
        public virtual ObjectResult<InventarioPorDia_Result> InventarioPorDia(Nullable<int> idProducto, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("idProducto", idProducto) :
                new ObjectParameter("idProducto", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InventarioPorDia_Result>("InventarioPorDia", idProductoParameter, fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<ObtenerProductosFechaCompra_Result> ObtenerProductosFechaCompra()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerProductosFechaCompra_Result>("ObtenerProductosFechaCompra");
        }
    
        public virtual int RespaldoDiarioInventario()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RespaldoDiarioInventario");
        }
    
        public virtual ObjectResult<SalidasVista_Result> SalidasVista(Nullable<int> idVendedor, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<int> idSucursal)
        {
            var idVendedorParameter = idVendedor.HasValue ?
                new ObjectParameter("idVendedor", idVendedor) :
                new ObjectParameter("idVendedor", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var idSucursalParameter = idSucursal.HasValue ?
                new ObjectParameter("idSucursal", idSucursal) :
                new ObjectParameter("idSucursal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SalidasVista_Result>("SalidasVista", idVendedorParameter, fechaInicioParameter, fechaFinParameter, idSucursalParameter);
        }
    
        public virtual ObjectResult<VentasCategorias_Result> VentasCategorias(Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin)
        {
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VentasCategorias_Result>("VentasCategorias", fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<VentasServicios_Result> VentasServicios(Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<int> idService)
        {
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var idServiceParameter = idService.HasValue ?
                new ObjectParameter("idService", idService) :
                new ObjectParameter("idService", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VentasServicios_Result>("VentasServicios", fechaInicioParameter, fechaFinParameter, idServiceParameter);
        }
    
        public virtual ObjectResult<VentasTipoCliente_Result> VentasTipoCliente(Nullable<int> vendedor, Nullable<int> sucursal, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin)
        {
            var vendedorParameter = vendedor.HasValue ?
                new ObjectParameter("Vendedor", vendedor) :
                new ObjectParameter("Vendedor", typeof(int));
    
            var sucursalParameter = sucursal.HasValue ?
                new ObjectParameter("Sucursal", sucursal) :
                new ObjectParameter("Sucursal", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VentasTipoCliente_Result>("VentasTipoCliente", vendedorParameter, sucursalParameter, fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<VentasTotales_Result> VentasTotales(Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin)
        {
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VentasTotales_Result>("VentasTotales", fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<VentasTotalesPorVendedor_Result> VentasTotalesPorVendedor(Nullable<int> vendedor, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin)
        {
            var vendedorParameter = vendedor.HasValue ?
                new ObjectParameter("Vendedor", vendedor) :
                new ObjectParameter("Vendedor", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VentasTotalesPorVendedor_Result>("VentasTotalesPorVendedor", vendedorParameter, fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<GetAniversaries_Result> GetAniversaries()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAniversaries_Result>("GetAniversaries");
        }
    
        public virtual ObjectResult<GetBirthDays_Result> GetBirthDays()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBirthDays_Result>("GetBirthDays");
        }
    
        public virtual int spexe_getBackupSAAD()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spexe_getBackupSAAD");
        }
    
        public virtual ObjectResult<ObtenerOrigenClientes_Result> ObtenerOrigenClientes(Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin)
        {
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerOrigenClientes_Result>("ObtenerOrigenClientes", fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<VentasProductos_Result> VentasProductos(Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<int> idCategoria, Nullable<int> idSubcategoria)
        {
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var idCategoriaParameter = idCategoria.HasValue ?
                new ObjectParameter("idCategoria", idCategoria) :
                new ObjectParameter("idCategoria", typeof(int));
    
            var idSubcategoriaParameter = idSubcategoria.HasValue ?
                new ObjectParameter("idSubcategoria", idSubcategoria) :
                new ObjectParameter("idSubcategoria", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VentasProductos_Result>("VentasProductos", fechaInicioParameter, fechaFinParameter, idCategoriaParameter, idSubcategoriaParameter);
        }
    
        public virtual ObjectResult<VentasCredito_Result> VentasCredito(Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin)
        {
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VentasCredito_Result>("VentasCredito", fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<CorteDiario_Result> CorteDiario(Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<int> sucursal, Nullable<int> vendedor)
        {
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var sucursalParameter = sucursal.HasValue ?
                new ObjectParameter("Sucursal", sucursal) :
                new ObjectParameter("Sucursal", typeof(int));
    
            var vendedorParameter = vendedor.HasValue ?
                new ObjectParameter("Vendedor", vendedor) :
                new ObjectParameter("Vendedor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CorteDiario_Result>("CorteDiario", fechaInicioParameter, fechaFinParameter, sucursalParameter, vendedorParameter);
        }
    }
}
